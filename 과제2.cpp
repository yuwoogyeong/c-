#include <iostream>
using namespace std;

int main()
{
	int answer;
	int get1, get2, get3;
	cout << "--------별 찍기 시스템---------" << endl;

	do { // 조건이 반복대상 문장보다 나중이면 참, 거짓 상관없이 문장을 실행하고 조건을 판단하기에 잘 맞다고 생각을 했다. 
		cout << "만들고 싶은 모양을 선택해주세요:" << endl;
		cout << "1. 직각삼각형 " << endl;
		cout << "2. 정삼각형" << endl;
		cout << "3. 나비" << endl;
		cout << "4. 나가기" << endl;
		cin >> answer; //answer을 통해 만들고 싶은 모양을 받는다.

		if (answer == 1) //1번을 받으면 직각삼각형을 만드는 식을 출력해낸다. 
		{
			cout << endl;
			cout << "직각삼각형을 선택하셨습니다. " << endl;
			cout << "행의 개수를 선택해 주세요. ";
			cin >> get1;
			
			for (int i = 0; i < get1; i++) //중첩 반복문을 통해서 직각삼각형을 만들어 낼것이다. 
			{
				for (int j = get1 -i ; j >0 ; j--) //첫 번째 직각삼각형은 빗변이 왼쪽으로 있는 삼각형이다. 
				{//그래서 빈 공백을 하나의 삼각형이라고 생각하고 출력을 할 수 있어야 한다. j를 get1 -i를 해 역순으로 받는다.
					cout << " ";
				}
				for (int k = 0; k <= i; k++) //k가 i 보다 작거나 클 때까지 받아 1,2,3,4로 늘어나도록 해야 한다. 
				{
					cout << "*";
				}
				cout << endl; //한 줄에 공백과 *을 뽑아내면 cout << endl;를 통해서 다음 행으로 넘어간다.  
			}
			cout << endl;
			for (int i = get1; i > 0; i--)// 이번 직각 삼각형은 빗변이 오른쪽을 보고 있는 눕혀진 삼각형이다.
			{
				for (int k = i; k > 0; k--) //이번에는 삼각형이 왼쪽으로 치우쳐져 있으므로 공백을 출력할 필요가 없다.
				{
					cout << "*"; //get1으로 부터 하나씩 줄어들도록 만들면 된다. 
				}
				cout << endl;
			}
			cout << endl;
			for (int i = get1; i > 0; i--) // 빗변이 왼쪽을 보고 있는 눕혀진 삼각형이다.
			{
				for (int j = 0; j < get1 - i; j++) // 공백도 작은 삼각형이라고 생각하고 출력해야 한다. 
				{
					cout << " ";
				}
				for (int k = i; k > 0; k--) //k가 i를 받아 하나씩 줄어들도록 만든다.
				{
					cout << "*";
				}
				cout << endl;
			}
		}
		else if (answer == 2) //2번을 선택하면 정삼각형을 만드는 식이 나올 것이다. 
		{
			cout << endl;
			cout << "정삼각형을 선택하셨습니다. " << endl;
			cout << "행의 개수를 선택해주세요. ";
			cin >> get2;

			for (int i = 1; i <= get2; i++) //정삼각형은 총 세개의 삼각형으로 이루어져 있다고 생각하면 된다.  
			{
				for (int j = get2 - i; j > 0; j--) //첫 번째의 공백의 직각 삼각형
				{
					cout << " "; //빗변이 오른쪽인 삼각형이 첫줄부터 하나씩 줄어들고 있다.
				}
				for (int k = 0; k < i; k++)// 두 번째의 빗변이 왼쪽을 보고 있는 직각 삼각형
				{
					cout << "*"; //i의 개수만큼 출력해낸다.
				}
				for (int h = 2; h <= i; h++) // 세 번째의 빗변이 오른쪽을 보고 있는 직각 삼각형
				{
					cout << "*"; //두번째 직각삼각형은 가장 중간(높은 부분)을 포함해서 만들었기에 
				}//세번째 직각삼각형은 2번째 행에서 시작하는 삼각형이다. 그렇기에 두번째식에서부터 출력을 해야 한다. 
				//그래서 h를 2로 두고 h<=i;를 두어 i가 1일 때는 출력을 못하고 그 다음 행으로 넘어가는 i가 2가 될 경우 하나를
				//출력해낼 수 있도록 만들었다. 
				cout << endl;
			}
		}
		else if (answer == 3) // 3을 입력하면 나비를 만들어 낸다. 
		{
			cout << endl;
			cout << "나비를 선택하셨습니다. " << endl; 
			while (1) //홀수인지 아닌지 판별하기 위해 while을 넣었다. 어떤 수를 계속 입력하냐에 따라 식이 계속 실행이
			{//되어야 하기 때문에 그냥 1(무한)으로 설정을 했다. 
				cout << "홀수를 입력해주세요.";//이번 문제에서는 홀수에서만 식이 실행되도록 해야 한다. 
				cin >> get3;

				if (get3 % 2 != 0) //입력 받았을 때 짝수가 아닌 경우이므로 밑에 식을 출력해낸다. 
				{
					get3 = (get3 - 1)/2;

					for (int i = 1; i <= get3; i++) //이번 나비도 여러 삼각형으로 쪼개야 한다. 
					{
						for (int k = 1; k <= i; k++)
						{
							cout << "*"; //왼쪽 상단 * 삼각형 출력
						}
						for (int j = get3; j > i; j--)
						{
							cout << " "; //왼쪽 상단 공백 삼각형 출력
						}
						for (int j = get3; j >= i; j--)
						{
							cout << " "; //오른쪽 상단 공백 삼각형 출력
						}
						for (int k = 1; k <= i; k++)
						{
							cout << "*"; //오른쪽 상단 * 삼각형 출력
						}
						cout << endl;
					}
					for (int i = 0; i <= 2 * get3; i++)
					{
						cout << "*"; //딱 가운데 (기준) * 삼각형 출력
					}
					cout << endl;
					for (int i = 0; i < get3; i++)
					{
						for (int k = get3 - i; k > 0; k--)
						{
							cout << "*"; //왼쪽 하단 * 삼각형 출력
						}
						for (int j = 0; j <= i; j++)
						{
							cout << " "; //왼쪽 하단 빈 공백의 삼각형 출력
						}
						for (int j = 1; j <= i; j++)
						{
							cout << " "; //오른쪽 하단 빈 공백의 삼각형 출력
						}
						for (int k = get3 - i; k > 0; k--)
						{
							cout << "*"; //오른쪽 하단 * 삼각형 출력
						}
						cout << endl;
					}
					

					break; //제대로 실행 했으므로 밖으로 탈출한다. 그럼 다시 맨 처음 선택해라는 문장이 뜰것이다.
				}
				else if (get3 %2 == 0) //짝수는 출력이 되면 안되므로 continue를 통해서 다시 숫자를 입력 받도록 했다. 
				{
					continue; 
				}
				
			}
			
		}
		else if (answer == 4) //4를 받는다. 하지만 4는 나가기를 의미하므로 break;를 통해서 여기서 그냥 나가면 된다. 
		{
			cout << endl;
			cout << "나가기를 선택하였습니다." << endl;
			cout << "감사합니다. " << endl;
			break;
		}
	} while (true);
	cout << endl;
}